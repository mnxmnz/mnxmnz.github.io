{"version":3,"file":"1ad49f364241ea80ec6cc70e358d5df1079af924-5c2bf08f96ff8988a7d7.js","mappings":"+KAKO,MAAMA,GAAeC,EAAAA,EAAAA,GAAOC,EAAAA,KAAI,CAAAC,OAAA,YAAXF,CAAY,wGASzBG,GAASA,EAAMC,MAAMC,OAAOC,cAAY,+HAcnDC,EAAAA,GAAQ,mDAMCC,GAAQR,EAAAA,EAAAA,GAAA,OAAAE,OAAA,YAAAF,CAAA,CAAAS,KAAA,UAAAC,OAAA,mEAORC,GAASX,EAAAA,EAAAA,GAAA,MAAAE,OAAA,YAAAF,CAAA,8JAUlBO,EAAAA,GAAQ,2BAKCK,GAAWZ,EAAAA,EAAAA,GAAA,MAAAE,OAAA,YAAAF,CAAA,uLAWpBO,EAAAA,GAAQ,2BAKCM,GAAeb,EAAAA,EAAAA,GAAA,KAAAE,OAAA,YAAAF,CAAA,2BAEjBG,GAASA,EAAMC,MAAMC,OAAOS,cAAY,K,aCrE5C,MAAMC,GAAOf,EAAAA,EAAAA,GAAA,OAAAE,OAAA,aAAAF,CAAA,2FAQhBO,EAAAA,GAAQ,+CAOCS,GAAMhB,EAAAA,EAAAA,GAAOiB,EAAAA,EAAW,CAAAf,OAAA,aAAlBF,CAAmB,CAAAS,KAAA,UAAAC,OAAA,8D,cCPtC,MARA,SAAkBQ,GAAkD,IAAjD,UAAEC,GAA4CD,EAC/D,OACEE,EAAAA,EAAAA,KAACL,EAAO,MACNK,EAAAA,EAAAA,KAACJ,EAAG,CAACK,MAAOF,EAAWG,IAAI,cAGjC,EC0BA,MAxBA,SAAiBJ,GASE,IATD,MAChBK,EAAK,KACLC,EAAI,QACJC,EACAN,WACEO,iBAAiB,gBAAEC,IACpB,KACDC,EAAI,KACJC,GACcX,EACd,OACEE,EAAAA,EAAAA,KAACrB,EAAY,CAAC+B,GAAIF,IAChBR,EAAAA,EAAAA,KAACW,EAAY,CAACZ,UAAWQ,KACzBP,EAAAA,EAAAA,KAACZ,EAAQ,MACPY,EAAAA,EAAAA,KAACT,EAAS,KAAEY,IACZH,EAAAA,EAAAA,KAACR,EAAW,KAAEa,IACdL,EAAAA,EAAAA,KAACP,EAAe,KACbW,EAAK,MAAWK,EAAK,cAKhC,EC/BO,MAAMG,GAAgBhC,EAAAA,EAAAA,GAAA,OAAAE,OAAA,aAAAF,CAAA,+BAIzBO,EAAAA,GAAQ,iBCkBZ,MAnBA,SAAqBW,GAAgC,IAA/B,MAAEe,GAA0Bf,EAChD,OACEE,EAAAA,EAAAA,KAACY,EAAgB,KACdC,EAAMC,KACLC,IAAA,IACEC,MAAM,GACJC,EACAC,QAAQ,KAAEC,GAAM,WAChBC,EAAU,YACVC,IAEWN,EAAA,OACbf,EAAAA,EAAAA,KAACsB,GAAQC,EAAAA,EAAAA,GAAA,GAAKF,EAAW,CAAEb,KAAMW,EAAMK,IAAKP,EAAIR,KAAMW,IAAc,IAK9E,C","sources":["webpack://devlog/./src/components/PostList/PostItem.style.ts","webpack://devlog/./src/components/PostList/Thumbnail.style.ts","webpack://devlog/./src/components/PostList/Thumbnail.tsx","webpack://devlog/./src/components/PostList/PostItem.tsx","webpack://devlog/./src/components/PostList/PostItemList.style.ts","webpack://devlog/./src/components/PostList/PostItemList.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\n\nimport { customMQ } from '@/styles/theme';\n\nexport const PostItemWrap = styled(Link)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0 0 4.5rem;\n  cursor: pointer;\n\n  :hover {\n    h1 {\n      color: ${props => props.theme.colors.primary_1000};\n      transition: all 0.3s ease-in-out;\n    }\n\n    img {\n      transform: scale(1.1);\n      transition: all 0.3s ease-in-out;\n    }\n  }\n\n  :nth-last-of-type(1) {\n    margin: 0;\n  }\n\n  ${customMQ} {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nexport const PostCard = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 0 1.7rem 0 0;\n`;\n\nexport const CardTitle = styled.h1`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  word-break: keep-all;\n  -webkit-line-clamp: 1;\n  overflow: hidden;\n  font-size: 2.1rem;\n  font-weight: 500;\n  line-height: 140%;\n\n  ${customMQ} {\n    -webkit-line-clamp: 3;\n  }\n`;\n\nexport const CardSummary = styled.h2`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 3;\n  overflow: hidden;\n  word-break: keep-all;\n  font-size: 1.5rem;\n  line-height: 130%;\n  margin: 1.5rem 0;\n\n  ${customMQ} {\n    -webkit-line-clamp: 3;\n  }\n`;\n\nexport const CardDescription = styled.p`\n  font-size: 1.3rem;\n  color: ${props => props.theme.colors.darkgray_800};\n`;\n","import styled from '@emotion/styled';\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nimport { customMQ } from '@/styles/theme';\n\nexport const ImgWrap = styled.div`\n  width: 22rem;\n  height: 14rem;\n  border-radius: 1rem;\n  overflow: hidden;\n  z-index: 0;\n  margin: 0 3rem 0 0;\n\n  ${customMQ} {\n    width: 100%;\n    height: auto;\n    margin: 0 0 1.7rem;\n  }\n`;\n\nexport const Img = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  isolation: isolate;\n`;\n","import { IGatsbyImageData } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { Img, ImgWrap } from './Thumbnail.style';\n\nfunction Thumbnail({ thumbnail }: { thumbnail: IGatsbyImageData }) {\n  return (\n    <ImgWrap>\n      <Img image={thumbnail} alt=\"thumbnail\" />\n    </ImgWrap>\n  );\n}\n\nexport default Thumbnail;\n","import React from 'react';\n\nimport {\n  CardDescription,\n  CardSummary,\n  CardTitle,\n  PostCard,\n  PostItemWrap,\n} from './PostItem.style';\nimport ThumbnailImg from './Thumbnail';\n\nimport { PostItemProps } from '@/typings/typings';\n\nfunction PostItem({\n  title,\n  date,\n  summary,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  link,\n  time,\n}: PostItemProps) {\n  return (\n    <PostItemWrap to={link}>\n      <ThumbnailImg thumbnail={gatsbyImageData} />\n      <PostCard>\n        <CardTitle>{title}</CardTitle>\n        <CardSummary>{summary}</CardSummary>\n        <CardDescription>\n          {date} &middot; {time} min read\n        </CardDescription>\n      </PostCard>\n    </PostItemWrap>\n  );\n}\n\nexport default PostItem;\n","import styled from '@emotion/styled';\n\nimport { customMQ } from '@/styles/theme';\n\nexport const PostItemListWrap = styled.div`\n  width: 76.8rem;\n  margin: 0 auto;\n\n  ${customMQ} {\n    width: 100%;\n  }\n`;\n","import React from 'react';\n\nimport PostItem from './PostItem';\nimport { PostItemListWrap } from './PostItemList.style';\n\nimport { ContentProps, PostItemListProps } from '@/typings/typings';\n\nfunction PostItemList({ posts }: PostItemListProps) {\n  return (\n    <PostItemListWrap>\n      {posts.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            timeToRead,\n            frontmatter,\n          },\n        }: ContentProps) => (\n          <PostItem {...frontmatter} link={slug} key={id} time={timeToRead} />\n        ),\n      )}\n    </PostItemListWrap>\n  );\n}\n\nexport default PostItemList;\n"],"names":["PostItemWrap","_styled","Link","target","props","theme","colors","primary_1000","customMQ","PostCard","name","styles","CardTitle","CardSummary","CardDescription","darkgray_800","ImgWrap","Img","GatsbyImage","_ref","thumbnail","___EmotionJSX","image","alt","title","date","summary","childImageSharp","gatsbyImageData","link","time","to","ThumbnailImg","PostItemListWrap","posts","map","_ref2","node","id","fields","slug","timeToRead","frontmatter","PostItem","_extends","key"],"sourceRoot":""}