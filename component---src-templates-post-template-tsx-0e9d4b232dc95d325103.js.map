{"version":3,"file":"component---src-templates-post-template-tsx-0e9d4b232dc95d325103.js","mappings":"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","sources":["webpack://devlog/./src/components/Profile/Description.style.ts","webpack://devlog/./src/components/Profile/Description.tsx","webpack://devlog/./src/components/Profile/Profile.style.ts","webpack://devlog/./src/components/Profile/ProfileImg.style.ts","webpack://devlog/./src/hooks/useProfileImage.ts","webpack://devlog/./src/components/Profile/ProfileImg.tsx","webpack://devlog/./src/components/Profile/Profile.tsx","webpack://devlog/./src/domains/post/Content.style.ts","webpack://devlog/./src/domains/post/Content.tsx","webpack://devlog/./src/domains/post/Description.style.ts","webpack://devlog/./src/domains/post/Description.tsx","webpack://devlog/./src/domains/post/LatestPosts.style.ts","webpack://devlog/./src/hooks/useLatestPosts.ts","webpack://devlog/./src/domains/post/LatestPosts.tsx","webpack://devlog/./src/domains/post/ShareButton.style.tsx","webpack://devlog/./src/utils/shareAPI.ts","webpack://devlog/./src/domains/post/ShareButton.tsx","webpack://devlog/./src/templates/PostTemplate.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { customMQ } from '@/styles/theme';\n\nexport const DescriptionWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 0 0 1.8rem;\n\n  ${customMQ} {\n    margin: 1.5rem 0 0;\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 3rem;\n  font-weight: 500;\n`;\n\nexport const Introduce = styled.p`\n  margin: 1.3rem 0 0.9rem;\n  font-size: 1.5rem;\n  line-height: 150%;\n\n  ${customMQ} {\n    margin: 1.5rem 0;\n  }\n`;\n\nexport const Contact = styled.div`\n  display: flex;\n\n  ${customMQ} {\n    margin: 0 auto;\n  }\n`;\n\nexport const ContactItem = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 0 0 0 2rem;\n  font-size: 1.3rem;\n\n  :hover {\n    color: ${props => props.theme.colors.primary_1000};\n  }\n\n  :nth-of-type(1) {\n    margin: 0;\n  }\n\n  a {\n    display: flex;\n    align-items: center;\n  }\n\n  svg {\n    margin: 0 0.5rem 0 0;\n    font-size: 1.5rem;\n  }\n`;\n","import React from 'react';\nimport { BsGithub, BsLinkedin } from 'react-icons/bs';\nimport { SiGmail } from 'react-icons/si';\n\nimport {\n  Contact,\n  ContactItem,\n  DescriptionWrap,\n  Introduce,\n  Name,\n} from './Description.style';\n\nfunction Description() {\n  return (\n    <DescriptionWrap>\n      <Name>ÍπÄÎØºÏßÄ</Name>\n      <Introduce>\n        ÏïàÎÖïÌïòÏÑ∏Ïöî üëã Í∞úÎ∞úÏûê ÍπÄÎØºÏßÄÏûÖÎãàÎã§. Î∞©Î¨∏Ìï¥ Ï£ºÏÖîÏÑú Í∞êÏÇ¨Ìï©ÎãàÎã§.\n      </Introduce>\n      <Contact>\n        <ContactItem>\n          <a href=\"mailto:minzidev@gmail.com\" aria-label=\"Email\">\n            <SiGmail />\n            Email\n          </a>\n        </ContactItem>\n        <ContactItem>\n          <a\n            href=\"https://github.com/mnxmnz\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            aria-label=\"Github\"\n          >\n            <BsGithub />\n            GitHub\n          </a>\n        </ContactItem>\n        <ContactItem>\n          <a\n            href=\"https://www.linkedin.com/in/dev-mnxmnz\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            aria-label=\"LinkedIn\"\n          >\n            <BsLinkedin /> LinkedIn\n          </a>\n        </ContactItem>\n      </Contact>\n    </DescriptionWrap>\n  );\n}\n\nexport default Description;\n","import styled from '@emotion/styled';\n\nimport { customMQ } from '@/styles/theme';\n\nexport const ProfileWrap = styled.div<{ padding: string }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${props => props.padding};\n\n  ${customMQ} {\n    flex-direction: column;\n    text-align: center;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nexport const ImgWrap = styled.div`\n  width: 13rem;\n  height: 13rem;\n  border-radius: 6.5rem;\n  overflow: hidden;\n  text-align: center;\n  z-index: 0;\n`;\n\nexport const Img = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  isolation: isolate;\n`;\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\n\ntype ProfileProps = {\n  profile: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData;\n    };\n  };\n};\n\nfunction useProfileImage() {\n  const { profile } = useStaticQuery<ProfileProps>(\n    graphql`\n      query {\n        profile: file(name: { eq: \"profile\" }) {\n          childImageSharp {\n            gatsbyImageData(width: 220)\n          }\n        }\n      }\n    `,\n  );\n\n  return profile;\n}\n\nexport default useProfileImage;\n","import React from 'react';\n\nimport { Img, ImgWrap } from './ProfileImg.style';\n\nimport useProfileImage from '@/hooks/useProfileImage';\n\nfunction ProfileImg() {\n  const profile = useProfileImage();\n\n  return (\n    <ImgWrap>\n      <Img image={profile.childImageSharp.gatsbyImageData} alt=\"profile\" />\n    </ImgWrap>\n  );\n}\n\nexport default ProfileImg;\n","import React from 'react';\n\nimport Description from './Description';\nimport { ProfileWrap } from './Profile.style';\nimport ProfileImg from './ProfileImg';\n\nfunction Profile({ padding }: { padding: string }) {\n  return (\n    <ProfileWrap padding={padding}>\n      <ProfileImg />\n      <Description />\n    </ProfileWrap>\n  );\n}\n\nexport default Profile;\n","import styled from '@emotion/styled';\n\nexport const StContent = styled.div`\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  width: 100%;\n  margin: 0 auto;\n  padding: 3rem 0;\n  word-wrap: break-word;\n\n  line-height: 175%;\n  font-size: 1.7rem;\n  font-weight: 400;\n  color: ${props => props.theme.colors.text_1000};\n\n  h1,\n  h2,\n  h3,\n  h4 {\n    font-weight: 600;\n    line-height: 130%;\n  }\n\n  h1,\n  h2,\n  h3 {\n    margin: 0 0 3rem 0;\n  }\n\n  h4 {\n    margin: 0 0 2rem 0;\n  }\n\n  h1 {\n    font-size: 3.1rem;\n  }\n\n  h2 {\n    font-size: 2.7rem;\n  }\n\n  h3 {\n    font-size: 2.3rem;\n  }\n\n  h4 {\n    font-size: 2rem;\n  }\n\n  * + h1 {\n    margin-top: 6rem;\n  }\n\n  * + h2 {\n    margin-top: 5.5rem;\n  }\n\n  * + h3 {\n    margin-top: 4.5rem;\n  }\n\n  * + h4 {\n    margin-top: 4rem;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3,\n  hr + h4 {\n    margin-top: 0;\n  }\n\n  p {\n    margin: 2rem 0;\n  }\n\n  blockquote {\n    margin: 2.7rem 0;\n    padding: 0.5rem 1.5rem;\n    border-left: 0.4rem solid ${props => props.theme.colors.primary_1000};\n    background-color: ${props => props.theme.colors.lightgray_500};\n\n    strong {\n      font-weight: 600;\n    }\n\n    p {\n      margin: 0.5rem 0;\n    }\n  }\n\n  ol,\n  ul {\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0 0 0 3rem;\n\n    p {\n      margin: 0.5rem 0;\n    }\n  }\n\n  ul {\n    list-style-type: disc;\n  }\n\n  ul ul {\n    list-style-type: circle;\n  }\n\n  ul ul ul {\n    list-style-type: square;\n  }\n\n  ol {\n    list-style-type: decimal;\n  }\n\n  details {\n    border: 0.1rem solid ${props => props.theme.colors.primary_1000};\n    border-radius: 1rem;\n    margin: 2rem 0;\n    padding: 1.5rem;\n    background-color: ${props => props.theme.colors.lightprimary_500};\n\n    summary {\n      cursor: pointer;\n    }\n\n    summary::marker {\n      color: ${props => props.theme.colors.primary_1000};\n    }\n\n    p {\n      margin: 1rem 0;\n    }\n\n    blockquote {\n      margin: 1.5rem 0 0;\n      background-color: inherit;\n    }\n  }\n\n  hr {\n    border: 0.1rem solid ${props => props.theme.colors.darkgray_300};\n    margin: 5.5rem 0;\n  }\n\n  a {\n    color: ${props => props.theme.colors.primary_1000};\n  }\n\n  a:active,\n  a:hover {\n    outline-width: 0;\n    text-decoration: underline;\n  }\n\n  strong {\n    font-weight: 600;\n  }\n\n  img {\n    width: 100%;\n    border-style: none;\n    border-radius: 1rem;\n  }\n\n  em {\n    font-size: 1.2rem;\n    font-style: italic;\n    display: block;\n    text-align: center;\n    margin: -1.5rem auto 0;\n  }\n\n  table {\n    display: table;\n    border: 0.2rem solid ${props => props.theme.colors.darkgray_300};\n    border-collapse: collapse;\n    margin: 1rem 0;\n  }\n\n  thead {\n    display: table-header-group;\n    font-weight: 600;\n    border-bottom: 0.5rem solid ${props => props.theme.colors.darkgray_300};\n  }\n\n  tr {\n    display: table-row;\n  }\n\n  th,\n  td {\n    display: table-cell;\n    padding: 1rem;\n    border: 0.2rem solid ${props => props.theme.colors.darkgray_300};\n  }\n\n  .deckgo-highlight-code-carbon {\n    margin: 1.5rem 0 2.5rem 0;\n    border-radius: 1rem;\n    font-size: 1.5rem;\n  }\n\n  code {\n    margin: 0 0.3rem 0 0;\n    padding: 0.2rem 0.6rem;\n    border-radius: 0.3rem;\n    background: #e9ecef;\n    font-size: 85%;\n  }\n`;\n","import React from 'react';\n\nimport { StContent } from './Content.style';\n\nfunction Markdown({ html }: { html: string }) {\n  return <StContent dangerouslySetInnerHTML={{ __html: html }} />;\n}\n\nexport default Markdown;\n","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\n\nimport { minimumMQ } from '@/styles/theme';\n\nexport const ContentTitle = styled.h1`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  padding: 5rem 0 1rem;\n  font-size: 3.3rem;\n  font-weight: 600;\n  line-height: 130%;\n  word-break: keep-all;\n`;\n\nexport const ContentDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2.5rem 0 5rem;\n`;\n\nexport const ContentDate = styled.span`\n  font-size: 1.5rem;\n\n  ${minimumMQ} {\n    display: none;\n  }\n`;\n\nexport const ContentCategory = styled(Link)`\n  padding: 0.4rem;\n  border-radius: 0.3rem;\n  background: ${props => props.theme.colors.text_1000};\n  color: ${props => props.theme.colors.white_1000};\n  font-size: 1.3rem;\n  font-weight: 500;\n\n  :hover {\n    background: ${props => props.theme.colors.primary_1000};\n  }\n`;\n\nexport const Line = styled.div`\n  width: 100%;\n  border-bottom: 0.3rem solid ${props => props.theme.colors.lightgray_500};\n`;\n","import React from 'react';\n\nimport {\n  ContentCategory,\n  ContentDate,\n  ContentDetails,\n  ContentTitle,\n  Line,\n} from './Description.style';\n\nimport { DescriptionProps } from '@/typings/typings';\n\nfunction DescriptionData({ title, date, category, time }: DescriptionProps) {\n  return (\n    <>\n      <ContentTitle>{title}</ContentTitle>\n      <Line />\n      <ContentDetails>\n        <ContentCategory\n          to={`/${category\n            .toLowerCase()\n            .replace(/[ /]/gi, '-')\n            .replace(/\\./g, '')}`}\n        >\n          {category}\n        </ContentCategory>\n        <ContentDate>\n          {date} &middot; {time} min read\n        </ContentDate>\n      </ContentDetails>\n    </>\n  );\n}\n\nexport default DescriptionData;\n","import styled from '@emotion/styled';\n\nexport const LatestPostsLabel = styled.p`\n  padding: 0 0 4rem 0;\n  font-size: 1.5rem;\n  text-align: center;\n`;\n","import { graphql, useStaticQuery } from 'gatsby';\n\nimport { LatestPostsProps } from '@/typings/typings';\n\nfunction useLatestPosts() {\n  const { posts } = useStaticQuery<LatestPostsProps>(\n    graphql`\n      query {\n        posts: allMarkdownRemark(\n          sort: {\n            order: DESC\n            fields: [frontmatter___date, frontmatter___title]\n          }\n          limit: 3\n        ) {\n          edges {\n            node {\n              id\n              fields {\n                slug\n              }\n              timeToRead\n              frontmatter {\n                title\n                summary\n                date(formatString: \"YYYY-MM-DD\")\n                thumbnail {\n                  childImageSharp {\n                    gatsbyImageData(width: 820)\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  return posts;\n}\n\nexport default useLatestPosts;\n","import React from 'react';\n\nimport { LatestPostsLabel } from './LatestPosts.style';\n\nimport PostItemList from '@/components/PostList/PostItemList';\nimport useLatestPosts from '@/hooks/useLatestPosts';\n\nfunction LatestPosts() {\n  const posts = useLatestPosts();\n\n  return (\n    <>\n      <LatestPostsLabel>ÏµúÏã†Í∏Ä Î≥¥Îü¨Í∞ÄÍ∏∞</LatestPostsLabel>\n      <PostItemList posts={posts.edges} />\n    </>\n  );\n}\n\nexport default LatestPosts;\n","import styled from '@emotion/styled';\n\nexport const ButtonWrap = styled.div`\n  width: 100%;\n  height: 10rem;\n  margin: 4rem 0 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-radius: 1rem;\n  background-color: ${props => props.theme.colors.lightgray_500};\n`;\n\nexport const Button = styled.button`\n  width: 12rem;\n  height: 4.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 1rem;\n  font-size: 1.5rem;\n  font-weight: 500;\n  color: ${props => props.theme.colors.white_1000};\n  background-color: ${props => props.theme.colors.primary_1000};\n  cursor: pointer;\n\n  svg {\n    font-size: 2rem;\n    margin: 0 0.8rem 0 0;\n  }\n\n  &:hover {\n    background-color: rgba(144, 144, 205, 1);\n  }\n`;\n","function shareAPI({ title, slug }: { title: string; slug: string }) {\n  if (navigator.share) {\n    navigator\n      .share({\n        title: `${title}`,\n        url: `${slug}`,\n      })\n      .catch(console.error);\n  } else if (navigator.clipboard) {\n    navigator.clipboard\n      .writeText(`https://mnxmnz.github.io${slug}`)\n      .then(() => {\n        alert('ÎßÅÌÅ¨Í∞Ä ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨ÎêòÏóàÏäµÎãàÎã§.');\n      })\n      .catch(console.error);\n  } else {\n    alert('Í≥µÏú† Í∏∞Îä•Ïù¥ ÏßÄÏõêÎêòÏßÄ ÏïäÎäî Î∏åÎùºÏö∞Ï†ÄÏûÖÎãàÎã§.');\n  }\n}\n\nexport default shareAPI;\n","import React from 'react';\nimport { BiShareAlt } from 'react-icons/bi';\n\nimport { Button, ButtonWrap } from './ShareButton.style';\n\nimport shareAPI from '@/utils/shareAPI';\n\ntype ShareButtonProps = {\n  title: string;\n  slug: string;\n};\n\nfunction ShareButton({ title, slug }: ShareButtonProps) {\n  return (\n    <ButtonWrap>\n      <Button onClick={() => shareAPI({ title, slug })}>\n        <BiShareAlt />\n        Í≥µÏú†ÌïòÍ∏∞\n      </Button>\n    </ButtonWrap>\n  );\n}\n\nexport default ShareButton;\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport SEO from '@/components/Layout/SEO';\nimport Profile from '@/components/Profile/Profile';\nimport Markdown from '@/domains/post/Content';\nimport DescriptionData from '@/domains/post/Description';\nimport LatestPosts from '@/domains/post/LatestPosts';\nimport ShareButton from '@/domains/post/ShareButton';\nimport { PostTemplateProps } from '@/typings/typings';\n\nfunction PostTemplate({\n  data: {\n    posts: { edges },\n  },\n}: PostTemplateProps) {\n  const {\n    node: {\n      fields: { slug },\n      html,\n      timeToRead,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        category,\n        thumbnail: { publicURL },\n      },\n    },\n  } = edges[0];\n\n  return (\n    <>\n      <SEO title={title} description={summary} cover={publicURL} />\n      <DescriptionData\n        title={title}\n        date={date}\n        category={category}\n        time={timeToRead}\n      />\n      <Markdown html={html} />\n      <ShareButton title={title} slug={slug} />\n      <Profile padding=\"8rem 0 8rem 0\" />\n      <LatestPosts />\n    </>\n  );\n}\n\nexport const profileQuery = graphql`\n  query Post($slug: String) {\n    posts: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { fields: { slug: { eq: $slug } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          html\n          timeToRead\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY-MM-DD\")\n            category\n            thumbnail {\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostTemplate;\n"],"names":["DescriptionWrap","_styled","target","customMQ","Name","name","styles","Introduce","Contact","ContactItem","props","theme","colors","primary_1000","___EmotionJSX","href","SiGmail","rel","BsGithub","BsLinkedin","ProfileWrap","padding","ImgWrap","Img","GatsbyImage","profile","useStaticQuery","useProfileImage","image","childImageSharp","gatsbyImageData","alt","_ref","ProfileImg","Description","StContent","text_1000","lightgray_500","lightprimary_500","darkgray_300","html","dangerouslySetInnerHTML","__html","ContentTitle","ContentDetails","ContentDate","minimumMQ","ContentCategory","Link","white_1000","Line","title","date","category","time","React","to","toLowerCase","replace","LatestPostsLabel","posts","useLatestPosts","PostItemList","edges","ButtonWrap","Button","slug","navigator","share","url","catch","console","error","clipboard","writeText","then","alert","onClick","shareAPI","BiShareAlt","data","node","fields","timeToRead","frontmatter","summary","thumbnail","publicURL","SEO","description","cover","DescriptionData","Markdown","ShareButton","Profile","LatestPosts"],"sourceRoot":""}